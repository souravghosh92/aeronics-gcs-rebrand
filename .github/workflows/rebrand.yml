name: Rebrand QGroundControl to Aeronics GCS

on:
  workflow_dispatch:
    inputs:
      QGC_APK_URL:
        description: "Direct download URL of QGroundControl APK"
        required: true
      APP_NAME:
        description: "Visible app name"
        default: "Aeronics GCS"

jobs:
  rebrand:
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ github.event.inputs.APP_NAME }}
      ICON: branding/aeronics_icon_512.png

    steps:
      - uses: actions/checkout@v4

      - name: Setup tools
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre zipalign apksigner imagemagick curl
          sudo mkdir -p /usr/local/lib
          curl -L -o /usr/local/lib/apktool.jar https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar
          echo '#!/usr/bin/env bash' | sudo tee /usr/local/bin/apktool >/dev/null
          echo 'exec java -jar /usr/local/lib/apktool.jar "$@"' | sudo tee -a /usr/local/bin/apktool >/dev/null
          sudo chmod +x /usr/local/bin/apktool

      - name: Download APK
        run: |
          mkdir -p work && cd work
          curl -L --fail -o qgc.apk "${{ github.event.inputs.QGC_APK_URL }}"

      - name: Decode APK
        run: cd work && apktool d -f -o decoded qgc.apk

      - name: Change app name + manifest fix
        run: |
          cd work/decoded
          mkdir -p res/values
          if ! grep -q 'name="app_name"' res/values/strings.xml 2>/dev/null; then
            echo '<resources><string name="app_name">'${APP_NAME}'</string></resources>' > res/values/strings.xml
          else
            sed -i 's#<string name="app_name">.*</string>#<string name="app_name">'${APP_NAME}'</string>#' res/values/strings.xml
          fi
          sed -i 's#<application #<application android:label="@string/app_name" android:extractNativeLibs="true" #' AndroidManifest.xml

      - name: Replace launcher icon
        run: |
          cd work/decoded
          if [ ! -f "$GITHUB_WORKSPACE/$ICON" ]; then
            echo "::error ::Missing branding/aeronics_icon_512.png"; exit 1
          fi
          for spec in "mdpi 48" "hdpi 72" "xhdpi 96" "xxhdpi 144" "xxxhdpi 192"; do
            d=$(echo $spec | awk '{print $1}'); s=$(echo $spec | awk '{print $2}')
            mkdir -p "res/mipmap-${d}"
            convert "$GITHUB_WORKSPACE/$ICON" -resize ${s}x${s} "res/mipmap-${d}/ic_launcher.png"
          done

      - name: Rebuild + sign
        run: |
          cd work
          apktool b decoded -o Aeronics-GCS-unsigned.apk
          zipalign -f 4 Aeronics-GCS-unsigned.apk Aeronics-GCS-aligned.apk
          keytool -genkey -v -keystore debug.keystore -storepass android \
            -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 \
            -dname "CN=Aeronics,O=Aeronics"
          apksigner sign --ks debug.keystore --ks-pass pass:android \
            --key-pass pass:android --out Aeronics-GCS.apk Aeronics-GCS-aligned.apk
          apksigner verify Aeronics-GCS.apk

      - uses: actions/upload-artifact@v4
        with:
          name: Aeronics-GCS-APK
          path: work/Aeronics-GCS.apk
