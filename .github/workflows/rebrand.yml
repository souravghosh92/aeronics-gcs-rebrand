name: Rebrand QGroundControl to Aeronics GCS

on:
  workflow_dispatch:

jobs:
  rebrand:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Download apktool & uber-apk-signer
        run: |
          curl -L -o apktool.jar https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar
          curl -L -o uber-apk-signer.jar https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar

      - name: Download base APK
        run: |
          curl -L -o base.apk https://github.com/souravghosh92/aeronics-gcs-rebrand/releases/download/1.0/QGroundControl.2.apk

      - name: Decode APK
        run: |
          rm -rf work
          java -jar apktool.jar d base.apk -o work -f

      # ---------------------- DIAGNOSTIC (Option 2) ---------------------------
      - name: Diagnose where logos & strings are
        run: |
          set -x
          # Text references
          grep -RInEI "QGroundControl" work > hits.txt || true
          # Likely logo/icon files
          find work -type f -iregex '.*\(logo\|qgc\|icon\).*\.\(png\|svg\)$' -print > images.txt || true
          # Zip the decoded APK for reference
          (cd work && zip -r ../decoded-apk.zip .) || true

      - name: Upload diagnosis
        uses: actions/upload-artifact@v4
        with:
          name: diagnosis
          path: |
            hits.txt
            images.txt
            decoded-apk.zip
      # -----------------------------------------------------------------------

      # ----------------------- BRANDING PREP ----------------------------------
      - name: Prepare branding assets
        run: |
          set -e
          mkdir -p branding
          [ -f icon.png ] && cp -f icon.png branding/icon.png || true
          [ -f LogoLight.png ] && cp -f LogoLight.png branding/LogoLight.png || true
          [ -f LogoDark.png ] && cp -f LogoDark.png branding/LogoDark.png || true
          if [ ! -f branding/icon.png ]; then
            echo "ERROR: branding/icon.png missing. Add your 512x512 icon."; exit 1
          fi
          [ -f branding/LogoLight.png ] || cp branding/icon.png branding/LogoLight.png
          [ -f branding/LogoDark.png ] || cp branding/icon.png branding/LogoDark.png
      # -----------------------------------------------------------------------

      # ----------------------- NAMES ------------------------------------------
      - name: Rename to Aeronics GCS (strings.xml + Manifest)
        run: |
          if grep -Rql 'name="app_name"' work/res/values*; then
            sed -i 's#<string name="app_name">[^<]*</string>#<string name="app_name">Aeronics GCS</string>#g' work/res/values*/strings.xml || true
          fi
          sed -i 's/android:label="[^"]*"/android:label="Aeronics GCS"/' work/AndroidManifest.xml || true
      # -----------------------------------------------------------------------

      # ----------------------- LAUNCHER ICONS ---------------------------------
      - name: Replace launcher icons (mipmap + adaptive)
        run: |
          for d in mipmap-mdpi mipmap-hdpi mipmap-xhdpi mipmap-xxhdpi mipmap-xxxhdpi; do
            mkdir -p work/res/$d
            cp -f branding/icon.png work/res/$d/ic_launcher.png 2>/dev/null || true
            cp -f branding/icon.png work/res/$d/ic_launcher_round.png 2>/dev/null || true
          done
          for d in drawable-anydpi-v26 drawable-v26 mipmap-anydpi-v26; do
            if [ -d "work/res/$d" ]; then
              cp -f branding/icon.png work/res/$d/ic_launcher_foreground.png 2>/dev/null || true
              cp -f branding/icon.png work/res/$d/ic_launcher_background.png 2>/dev/null || true
            fi
          done
          find work/res -type f -name "ic_launcher.xml" -print -exec \
            sed -i 's|android:drawable=\"@[^"]*\"|android:drawable=\"@mipmap/ic_launcher\"|g' {} \; || true
      # -----------------------------------------------------------------------

      # ----------------------- BRUTE-FORCE LOGO OVERWRITE ---------------------
      - name: Overwrite all logo/qgc images (brute-force)
        run: |
          # Any PNG/SVG with 'logo' or 'qgc' in filename anywhere
          find work -type f -iregex '.*\(logo\|qgc\).*\.\(png\|svg\)$' -print \
            -exec cp -f branding/LogoLight.png {} \; || true
          # Common splash images -> use the round icon
          find work -type f -iregex '.*/splash[^/]*\.png$' -print \
            -exec cp -f branding/icon.png {} \; || true
      # -----------------------------------------------------------------------

      # ----------------------- TEXT REPLACEMENTS ------------------------------
      - name: Replace inâ€‘app text "QGroundControl" -> "Aeronics GCS"
        run: |
          for ext in qml js json txt; do
            grep -RIl --include="*.${ext}" "QGroundControl" work 2>/dev/null \
              | xargs -r sed -i 's/QGroundControl/Aeronics GCS/g'
          done
      # -----------------------------------------------------------------------

      - name: Rebuild unsigned APK
        run: |
          java -jar apktool.jar b work -o unsigned.apk

      - name: Sign & align APK
        run: |
          mkdir -p output
          java -jar uber-apk-signer.jar -a unsigned.apk -o output

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Aeronics-GCS-APK
          path: output/*.apk
