name: Rebrand QGroundControl to Aeronics GCS
on:
  workflow_dispatch:

jobs:
  rebrand:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip zip openjdk-17-jdk
          curl -L -o apktool.jar https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar
          curl -L -o apktool https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool
          chmod +x apktool
          curl -L -o uber-apk-signer.jar https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar

      - name: Download base QGC APK
        run: |
          curl -L -o base.apk https://github.com/souravghosh92/aeronics-gcs-rebrand/releases/download/1.0/QGroundControl.2.apk

      - name: Decode APK
        run: |
          java -jar apktool.jar d base.apk -o decoded-apk --force

      - name: Apply Aeronics branding (icons, logos, splash, text)
        run: |
          set -e

          ICON_SRC="custom/res/images/aeronics_icon.png"
          LOGO_SRC="custom/res/images/aeronics_logo.png"
          SPLASH_SRC="custom/res/images/splash.png"

          test -f "$ICON_SRC" && test -f "$LOGO_SRC" && test -f "$SPLASH_SRC"

          # 1) Launcher icons (copy to every density group that exists)
          for d in decoded-apk/res/mipmap-*dpi*; do
            if [ -d "$d" ]; then
              cp "$ICON_SRC" "$d/ic_launcher.png" || true
              cp "$ICON_SRC" "$d/ic_launcher_round.png" 2>/dev/null || true
              cp "$ICON_SRC" "$d/ic_qgc.png" 2>/dev/null || true
            fi
          done

          # 2) Inâ€‘app Q logos (common QGC places)
          # Try several likely targets; ignore missing ones.
          cp "$LOGO_SRC" decoded-apk/res/drawable/logo.png 2>/dev/null || true
          cp "$LOGO_SRC" decoded-apk/res/drawable/ic_qgc.png 2>/dev/null || true
          cp "$LOGO_SRC" decoded-apk/res/drawable/qgc_logo.png 2>/dev/null || true
          cp "$LOGO_SRC" decoded-apk/res/drawable/qgroundcontrol.png 2>/dev/null || true

          # Also patch vector or XML drawables that reference bitmap names
          find decoded-apk/res -type f -name "*.xml" -print0 \
            | xargs -0 sed -i \
              -e 's/ic_qgc/logo/g' \
              -e 's/qgc_logo/logo/g' \
              -e 's/qgroundcontrol/logo/g'

          # 3) Splash artwork (several variants)
          cp "$SPLASH_SRC" decoded-apk/res/drawable/splash.png 2>/dev/null || true
          cp "$SPLASH_SRC" decoded-apk/res/drawable/splash_image.png 2>/dev/null || true
          cp "$SPLASH_SRC" decoded-apk/res/drawable-nodpi/splash.png 2>/dev/null || true

          # 4) Rename all visible strings to Aeronics GCS
          find decoded-apk -type f -name "*.xml"   -exec sed -i 's/QGroundControl/Aeronics GCS/g' {} +
          find decoded-apk -type f -name "*.smali" -exec sed -i 's/QGroundControl/Aeronics GCS/g' {} +

          # 5) Ensure app label in AndroidManifest
          MANIFEST="decoded-apk/AndroidManifest.xml"
          if grep -q 'android:label=' "$MANIFEST"; then
            sed -i 's/android:label="[^"]*"/android:label="Aeronics GCS"/' "$MANIFEST"
          else
            sed -i 's/<application /<application android:label="Aeronics GCS" /' "$MANIFEST"
          fi

      - name: Rebuild APK
        run: |
          java -jar apktool.jar b decoded-apk -o Aeronics-GCS-unsigned.apk

      - name: Sign APK
        run: |
          java -jar uber-apk-signer.jar --apks Aeronics-GCS-unsigned.apk
          mv Aeronics-GCS-unsigned-aligned-debugSigned.apk Aeronics-GCS.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: Aeronics-GCS-APK
          path: Aeronics-GCS.apk
