name: Rebrand QGroundControl to Aeronics GCS

on:
  workflow_dispatch:
    inputs:
      base_apk_url:
        description: "Direct download URL of the base APK (e.g., your GitHub release asset URL)"
        required: true
        type: string

jobs:
  rebrand:
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java (for apktool / signing)
        uses: actions/setup-java@v4
        with:
            distribution: temurin
            java-version: "17"

      - name: Download tools (apktool + wrapper + uber-apk-signer)
        run: |
          set -euxo pipefail
          curl -sL -o apktool.jar https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar
          curl -sL -o apktool https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool
          chmod +x apktool
          curl -sL -o uber-apk-signer.jar https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar

      - name: Download base APK
        run: |
          set -euxo pipefail
          curl -L "${{ inputs.base_apk_url }}" -o base.apk
          ls -lh base.apk

      - name: Decode APK
        run: |
          set -euxo pipefail
          ./apktool d -f -o decoded-apk base.apk
          echo "==== decoded-apk top ===="
          ls -la decoded-apk | sed -n '1,120p'

      - name: Show decoded resources (debug)
        run: |
          set -euxo pipefail
          echo "==== res folders ===="
          ls -la decoded-apk/res | sed -n '1,200p' || true
          echo "==== values files ===="
          find decoded-apk/res -maxdepth 1 -type f -name '*.xml' -print || true
          echo "==== values dirs ===="
          find decoded-apk/res -type d -name 'values*' -print || true

      - name: Verify Aeronics branding images exist
        run: |
          set -euxo pipefail
          ls -l custom/res/images || true
          test -f custom/res/images/aeronics_icon.png
          test -f custom/res/images/aeronics_logo.png
          test -f custom/res/images/splash.png

      - name: Apply Aeronics app name (strings.xml)
        run: |
          set -euxo pipefail
          # Change app_name and any human-facing names to "Aeronics GCS"
          for f in $(find decoded-apk/res -type f -name "strings.xml"); do
            echo "Patching $f"
            sed -i 's/>QGroundControl</>Aeronics GCS</g' "$f" || true
            sed -i 's/>QGC</>Aeronics GCS</g' "$f" || true
            sed -i 's/\"QGroundControl\"/\"Aeronics GCS\"/g' "$f" || true
          done

          # Some builds keep extra UI strings with QGC text
          find decoded-apk -type f -name "*.qml" -print0 | xargs -0 -I {} sed -i 's/QGroundControl/Aeronics GCS/g' "{}" || true
          find decoded-apk -type f -name "*.json" -print0 | xargs -0 -I {} sed -i 's/QGroundControl/Aeronics GCS/g' "{}" || true
          find decoded-apk -type f -name "*.txt" -print0 | xargs -0 -I {} sed -i 's/QGroundControl/Aeronics GCS/g' "{}" || true

      - name: Replace launcher icons (mipmap-*)
        run: |
          set -euxo pipefail
          ICON=custom/res/images/aeronics_icon.png
          # Overwrite common launcher icon names across all densities
          for d in $(find decoded-apk/res -maxdepth 1 -type d -name "mipmap-*"); do
            echo "Updating icons in $d"
            for n in ic_launcher.png ic_launcher_round.png ic_qgc.png ic_qgroundcontrol.png; do
              if [ -f "$d/$n" ]; then
                cp "$ICON" "$d/$n"
              fi
            done
          done

      - name: Replace in-app logos (drawable*)
        run: |
          set -euxo pipefail
          LOGO=custom/res/images/aeronics_logo.png
          SPLASH=custom/res/images/splash.png

          # Replace any file that looks like the Q logo
          while IFS= read -r -d '' p; do
            echo "Replacing logo $p"
            cp "$LOGO" "$p"
          done < <(find decoded-apk/res -type f -iname '*qgc*.png' -print0)

          # Common generic logo names
          for d in $(find decoded-apk/res -type d -name "drawable*"); do
            for n in logo.png app_logo.png qgc_logo.png qgroundcontrol_logo.png aboutLogo.png; do
              if [ -f "$d/$n" ]; then
                echo "Replacing $d/$n"
                cp "$LOGO" "$d/$n"
              fi
            done
            # Splash artwork, if present
            for s in splash.png splashscreen.png qgc_splash.png; do
              if [ -f "$d/$s" ]; then
                echo "Replacing $d/$s"
                cp "$SPLASH" "$d/$s"
              fi
            done
          done

      - name: Extra text scrub (Q â†’ Aeronics GCS) in QML & assets
        run: |
          set -euxo pipefail
          # UI strings inside QML, JS, and plaintext assets
          for ext in qml js txt md qrc; do
            find decoded-apk -type f -name "*.${ext}" -print0 | xargs -0 -I {} sed -i 's/QGroundControl/Aeronics GCS/g' "{}" || true
            find decoded-apk -type f -name "*.${ext}" -print0 | xargs -0 -I {} sed -i 's/\bQGC\b/Aeronics GCS/g' "{}" || true
          done

      - name: Build unsigned APK with apktool
        run: |
          set -euxo pipefail
          ./apktool b -o unsigned.apk decoded-apk
          ls -lh unsigned.apk

      - name: Sign and align APK (uber-apk-signer)
        run: |
          set -euxo pipefail
          java -jar uber-apk-signer.jar -a unsigned.apk -o out --allowResign
          ls -la out
          mv out/unsigned-aligned-signed.apk Aeronics-GCS.apk
          ls -lh Aeronics-GCS.apk

      - name: Upload Aeronics-GCS.apk
        uses: actions/upload-artifact@v4
        with:
          name: Aeronics-GCS
          path: Aeronics-GCS.apk
          if-no-files-found: error
