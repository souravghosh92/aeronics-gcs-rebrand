name: Rebrand QGroundControl to Aeronics GCS (APK)
on: { workflow_dispatch: {} }

permissions: { contents: read }

env:
  BASE_APK_URL: "https://github.com/souravghosh92/aeronics-gcs-rebrand/releases/download/1.0/QGroundControl.2.apk"
  ICON_FILE: "custom/res/images/aeronics_icon.png"
  LOGO_FILE: "custom/res/images/aeronics_logo.png"
  SPLASH_FILE: "custom/res/images/splash.png"
  NEW_APP_NAME: "Aeronics GCS"

jobs:
  rebrand:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Verify images exist
        run: |
          set -e
          [ -s "$ICON_FILE" ] || { echo "Missing $ICON_FILE"; exit 1; }
          [ -s "$LOGO_FILE" ] || { echo "Missing $LOGO_FILE"; exit 1; }
          echo "Images OK"

      - name: Java & tools
        uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '17' }

      - name: Install CLI tools
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y imagemagick aapt zipalign jq libimage-exiftool-perl
          curl -L -o apktool.jar https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar
          curl -L -o apktool https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool
          chmod +x apktool
          curl -L -o uber-apk-signer.jar https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar

      - name: Download base APK
        run: |
          curl -L "$BASE_APK_URL" -o base.apk
          aapt dump badging base.apk | head -n 40 || true

      - name: Decode
        run: |
          java -jar apktool.jar d -f -o decoded-apk base.apk

      - name: Replace app name (strings + manifest literal)
        run: |
          set -eux
          for f in decoded-apk/res/values*/strings*.xml; do
            [ -f "$f" ] || continue
            sed -i 's/>QGroundControl</>'"$NEW_APP_NAME"'</g' "$f" || true
            sed -i 's/>Q Ground Control</>'"$NEW_APP_NAME"'</g' "$f" || true
            sed -i 's/>QGC</>'"$NEW_APP_NAME"'</g' "$f" || true
          done
          if grep -q 'android:label="QGroundControl"' decoded-apk/AndroidManifest.xml; then
            sed -i 's/android:label="QGroundControl"/android:label="'"$NEW_APP_NAME"'"/' decoded-apk/AndroidManifest.xml
          fi
          if grep -q "android:label='QGroundControl'" decoded-apk/AndroidManifest.xml; then
            sed -i "s/android:label='QGroundControl'/android:label='${NEW_APP_NAME}'/" decoded-apk/AndroidManifest.xml
          fi

      - name: Fix adaptive launcher icons (mipmap + xml)
        run: |
          set -eux
          # Replace bitmap payloads in all mipmap-* folders
          for d in decoded-apk/res/mipmap-*; do
            [ -d "$d" ] || continue
            for n in ic_launcher.png ic_launcher_round.png ic_launcher_foreground.png; do
              [ -f "$d/$n" ] && cp "$ICON_FILE" "$d/$n" || true
            done
          done
          # Force adaptive XMLs to use the bitmap (@mipmap/ic_launcher) as foreground
          for x in decoded-apk/res/mipmap-anydpi-v26/ic_launcher*.xml; do
            [ -f "$x" ] || continue
            sed -i 's/android:foreground="@mipmap\/ic_launcher_foreground"/android:foreground="@mipmap\/ic_launcher"/' "$x" || true
            sed -i 's/android:monochrome="[^"]*"/android:monochrome="@mipmap\/ic_launcher"/' "$x" || true
          done

      - name: Replace in-app PNG/SVG in res and assets
        run: |
          set -eux
          # Replace typical brand/Logo/QGC images everywhere under res and assets
          find decoded-apk -type f -iregex '.*\/\(res\|assets\)\/.*\(qgc\|logo\|brand\|appicon\|ic_.*q.*\).*\.\(png\|svg\)$' -print0 \
            | while IFS= read -r -d '' p; do cp "$LOGO_FILE" "$p" || true; echo "Replaced $p"; done
          # Splash (optional)
          if [ -s "$SPLASH_FILE" ]; then
            find decoded-apk -type f -iregex '.*\/\(res\|assets\)\/.*splash.*\.png$' -print0 \
              | while IFS= read -r -d '' p; do cp "$SPLASH_FILE" "$p" || true; echo "Replaced $p (splash)"; done
          fi

      - name: Replace text inside QML, JS, JSON, TXT, XML in assets
        run: |
          set -eux
          if [ -d decoded-apk/assets ]; then
            find decoded-apk/assets \
              -type f -iregex '.*\.\(qml\|js\|json\|txt\|xml\)$' -print0 \
              | while IFS= read -r -d '' f; do
                  sed -i 's/QGroundControl/'"$NEW_APP_NAME"'/g' "$f" || true
                  sed -i 's/\bQGC\b/'"$NEW_APP_NAME"'/g' "$f" || true
                done
          fi

      - name: Diagnostics (find remaining Q references)
        run: |
          mkdir -p diag
          (grep -RniE "QGroundControl|\\bQGC\\b" decoded-apk || true) > diag/remaining_strings.txt
          (cd decoded-apk && find res assets -type f -iregex '.*\(qgc\|logo\|brand\).*\.\(png\|svg\)' | sort) > diag/images_touched.txt
          aapt dump badging base.apk   > diag/badging_before.txt || true

      - name: Build
        run: |
          java -jar apktool.jar b -o unsigned.apk decoded-apk
          zipalign -p -f 4 unsigned.apk unsigned-aligned.apk || cp unsigned.apk unsigned-aligned.apk
          java -jar uber-apk-signer.jar --allowResign -a unsigned-aligned.apk --out signed
          aapt dump badging signed/*.apk > diag/badging_after.txt || true
          zip -r diagnosis.zip diag

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with: { name: Aeronics-GCS-APK, path: signed/*.apk }

      - name: Upload diagnosis
        uses: actions/upload-artifact@v4
        with: { name: diagnosis, path: diagnosis.zip }
