name: Rebrand QGroundControl to Aeronics GCS

on:
  workflow_dispatch:

jobs:
  rebrand:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_NDK_HOME: ${{ github.workspace }}/android-sdk/ndk/26.1.10909125
      ANDROID_API: "24"
      CMAKE_BUILD_TYPE: "Release"
      QT_VERSION: "6.5.3"
      QT_MODULES: "qtbase qtmultimedia qtdeclarative qtshadertools"
      QGC_REF: "v5.0.6"

    steps:
      - name: Checkout rebrand repo
        uses: actions/checkout@v4

      - name: Install Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake unzip

      - name: Install Android SDK & NDK
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          curl -Lo tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip tools.zip -d latest
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platforms;android-${ANDROID_API}" \
            "build-tools;34.0.0" \
            "ndk;26.1.10909125" \
            "platform-tools"

      - name: Install Qt (Android)
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          target: android
          host: linux
          arch: android_arm64_v8a
          modules: ${{ env.QT_MODULES }}

      - name: Clone QGroundControl
        run: |
          git clone --depth=1 --branch "${QGC_REF}" https://github.com/mavlink/qgroundcontrol.git qgc

      - name: Apply Aeronics branding
        run: |
          mkdir -p qgc/custom
          cp -R custom/* qgc/custom/

      - name: Configure CMake
        run: |
          cd qgc
          cmake -S . -B build-android -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} \
            -DANDROID=ON \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-${{ env.ANDROID_API }} \
            -DQT_ANDROID_SDK_ROOT=$ANDROID_HOME \
            -DQT_ANDROID_NDK_ROOT=$ANDROID_NDK_HOME \
            -DQGC_CUSTOM_BUILD=ON \
            -DQGC_CUSTOM_DIRECTORY=${{ github.workspace }}/qgc/custom \
            -DCMAKE_PREFIX_PATH="${{ env.Qt6_DIR }}"

      - name: Build APK
        run: |
          cd qgc
          cmake --build build-android -j$(nproc) --target apk || cmake --build build-android -j$(nproc)

      - name: Find APK
        id: find_apk
        run: |
          cd qgc
          APK=$(find build-android -type f -name "*.apk" | head -n1 || true)
          if [ -z "$APK" ]; then
            echo "No APK found!"
            exit 1
          fi
          echo "apk=$APK" >> $GITHUB_OUTPUT

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Aeronics-GCS-APK
          path: ${{ steps.find_apk.outputs.apk }}
