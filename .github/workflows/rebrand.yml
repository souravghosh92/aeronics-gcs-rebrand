name: Build Aeronics GCS from QGC source (Android)

on:
  workflow_dispatch:
    inputs:
      QGC_REPO:
        description: "QGroundControl repo to build"
        required: true
        default: "mavlink/qgroundcontrol"
      QGC_REF:
        description: "Branch/tag (match your base APK major version; try v5.0.6 or master)"
        required: true
        default: "v5.0.6"
      APP_NAME:
        description: "Visible app name"
        required: true
        default: "Aeronics GCS"
      ICON_PATH:
        description: "512x512 PNG in your repo for launcher"
        required: true
        default: "branding/aeronics_icon_512.png"
      INAPP_LOGO:
        description: "In-app logo PNG (transparent). Falls back to ICON_PATH if missing."
        required: false
        default: "branding/overrides/assets/qml/images/aeronics_logo.png"
      PACKAGE_ID:
        description: "(Optional) New package id, e.g. in.aeronics.gcs (leave blank to keep default)"
        required: false
        default: ""

jobs:
  android:
    runs-on: ubuntu-22.04

    env:
      QT_VERSION: "6.5.3"
      QT_MAJOR: "6"                    # hardcoded major version
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_NDK_VERSION: "25.2.9519653"
      JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64

    steps:
      - name: Checkout branding repo
        uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip git build-essential ninja-build ccache wget jq p7zip-full imagemagick

      - name: Install Android SDK + cmdline-tools
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdtools.zip
          unzip -q cmdtools.zip
          mv cmdline-tools cmdline-tools/latest
          rm -f cmdtools.zip
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;${{ env.ANDROID_NDK_VERSION }}"

      - name: Install Qt (Android)
        run: |
          wget -q https://download.qt.io/official_releases/qt/${{ env.QT_MAJOR }}/${{ env.QT_VERSION }}/qt-opensource-linux-x64-${{ env.QT_VERSION }}.7z -O qt.7z || \
          wget -q https://mirrors.ocf.berkeley.edu/qt/official_releases/qt/${{ env.QT_MAJOR }}/${{ env.QT_VERSION }}/qt-opensource-linux-x64-${{ env.QT_VERSION }}.7z -O qt.7z
          mkdir -p $HOME/Qt
          7z x qt.7z -o$HOME/Qt > /dev/null
          echo "$HOME/Qt/${{ env.QT_VERSION }}/android_arm64_v8a/bin" >> $GITHUB_PATH
          echo "$HOME/Qt/${{ env.QT_VERSION }}/gcc_64/bin" >> $GITHUB_PATH

      # â€¦ (the rest of the steps stay the same as I gave you before)
