name: Rebrand QGroundControl to Aeronics GCS

on:
  workflow_dispatch:

jobs:
  rebrand:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      BUILD_TOOLS: 34.0.0

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify required files
        run: |
          set -e
          test -f branding/base.apk || (echo "Missing branding/base.apk" && exit 1)
          test -f custom/res/images/aeronics_icon.png || (echo "Missing aeronics_icon.png" && exit 1)
          test -f custom/res/images/aeronics_logo.png || (echo "Missing aeronics_logo.png" && exit 1)

      - name: Install Java & ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jre-headless imagemagick unzip wget

      - name: Install Android SDK
        run: |
          set -eux
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O clt.zip
          unzip -q clt.zip
          rm clt.zip
          mv cmdline-tools latest || true
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-34" "build-tools;${BUILD_TOOLS}"
          echo "PATH=$ANDROID_SDK_ROOT/build-tools/${BUILD_TOOLS}:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

      - name: Install apktool
        run: |
          set -eux
          APKTOOL_VER=2.9.3
          wget -q https://github.com/iBotPeaches/Apktool/releases/download/v${APKTOOL_VER}/apktool_${APKTOOL_VER}.jar -O apktool.jar
          echo '#!/usr/bin/env bash' > apktool
          echo 'java -jar "$(dirname "$0")/apktool.jar" "$@"' >> apktool
          chmod +x apktool

      - name: Decode base APK
        run: ./apktool d -f -o decoded branding/base.apk

      - name: Replace launcher icon
        run: |
          set -eux
          ICON="custom/res/images/aeronics_icon.png"
          mkdir -p decoded/res/mipmap-anydpi-v26 decoded/res/drawable-nodpi
          cp "$ICON" decoded/res/drawable-nodpi/aeronics_icon.png
          cat > decoded/res/mipmap-anydpi-v26/ic_launcher.xml <<'EOL'
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
  <background android:drawable="@android:color/white"/>
  <foreground>
    <bitmap android:src="@drawable/aeronics_icon" android:gravity="center"/>
  </foreground>
</adaptive-icon>
EOL
          cp decoded/res/mipmap-anydpi-v26/ic_launcher.xml decoded/res/mipmap-anydpi-v26/ic_launcher_round.xml
          sed -i 's/android:icon="[^"]*"/android:icon="@mipmap\/ic_launcher"/' decoded/AndroidManifest.xml || true
          sed -i 's/android:roundIcon="[^"]*"/android:roundIcon="@mipmap\/ic_launcher_round"/' decoded/AndroidManifest.xml || true

      - name: Replace in-app Q logos
        run: |
          set -eux
          SRC="custom/res/images/aeronics_logo.png"
          mapfile -t TARGETS < <(find decoded/res -type f -iregex '.*\(qgc\|qground\|logo\|about\).*\.\(png\|webp\)')
          for f in "${TARGETS[@]}"; do
            ext="${f##*.}"
            W=$(identify -format "%w" "$f" 2>/dev/null || echo 0)
            H=$(identify -format "%h" "$f" 2>/dev/null || echo 0)
            if [ "$W" -gt 0 ] && [ "$H" -gt 0 ]; then
              if [[ "$ext" == "webp" ]]; then
                convert "$SRC" -resize "${W}x${H}" tmp.webp && mv tmp.webp "$f"
              else
                convert "$SRC" -resize "${W}x${H}" "$f"
              fi
            else
              cp "$SRC" "$f"
            fi
          done

      - name: Rename visible strings
        run: |
          find decoded/res -type f -name "strings.xml" -print0 | while IFS= read -r -d '' s; do
            sed -i 's/QGroundControl/Aeronics GCS/g' "$s" || true
            sed -i 's/\bQGC\b/Aeronics GCS/g' "$s" || true
          done

      - name: Rebuild APK
        run: ./apktool b decoded -o unsigned.apk

      - name: Zipalign
        run: zipalign -f -p 4 unsigned.apk aligned.apk

      - name: Sign APK
        run: |
          KEYSTORE=debug.keystore
          KEYALIAS=androiddebugkey
          KEYPASS=android
          if [ ! -f "$KEYSTORE" ]; then
            keytool -genkeypair -keystore "$KEYSTORE" -storepass "$KEYPASS" \
              -alias "$KEYALIAS" -keypass "$KEYPASS" -keyalg RSA -keysize 2048 \
              -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
          fi
          apksigner sign --ks "$KEYSTORE" --ks-pass pass:$KEYPASS --key-pass pass:$KEYPASS \
            --out Aeronics-GCS.apk aligned.apk
          apksigner verify --verbose Aeronics-GCS.apk

      - name: Upload rebranded APK
        uses: actions/upload-artifact@v4
        with:
          name: Aeronics-GCS
          path: Aeronics-GCS.apk
