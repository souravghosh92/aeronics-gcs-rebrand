name: Rebrand QGroundControl to Aeronics GCS
on:
  workflow_dispatch:

jobs:
  rebrand:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Get tools
        run: |
          curl -L -o apktool.jar https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar
          curl -L -o uber-apk-signer.jar https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar

      - name: Download base APK
        run: |
          curl -L -o base.apk https://github.com/souravghosh92/aeronics-gcs-rebrand/releases/download/1.0/QGroundControl.2.apk

      - name: Decode APK
        run: |
          rm -rf work
          java -jar apktool.jar d base.apk -o work -f

      # ---------- DIAGNOSIS (leave as-is and send me these files) -------------
      - name: Diagnose where logos & strings are
        run: |
          set -x
          grep -RInEI "QGroundControl" work > hits.txt || true
          find work -type f -iregex '.*\(logo\|qgc\|icon\).*\.\(png\|svg\)$' -print > images.txt || true
          (cd work && zip -r ../decoded-apk.zip .) || true

      - name: Upload diagnosis
        uses: actions/upload-artifact@v4
        with:
          name: diagnosis
          path: |
            hits.txt
            images.txt
            decoded-apk.zip
      # ------------------------------------------------------------------------

      - name: Prepare branding assets
        run: |
          set -e
          mkdir -p branding
          # Expect your assets at repo root: icon.png, LogoLight.png, LogoDark.png
          [ -f icon.png ] && cp -f icon.png branding/icon.png || true
          [ -f LogoLight.png ] && cp -f LogoLight.png branding/LogoLight.png || true
          [ -f LogoDark.png ] && cp -f LogoDark.png branding/LogoDark.png || true
          if [ ! -f branding/icon.png ]; then echo "branding/icon.png is required (512x512)."; exit 1; fi
          [ -f branding/LogoLight.png ] || cp branding/icon.png branding/LogoLight.png
          [ -f branding/LogoDark.png ] || cp branding/icon.png branding/LogoDark.png
          # Copy a neutral name we’ll reuse everywhere:
          cp -f branding/LogoLight.png branding/aeronics_logo.png

      - name: Rename app label
        run: |
          if grep -Rql 'name="app_name"' work/res/values*; then
            sed -i 's#<string name="app_name">[^<]*</string>#<string name="app_name">Aeronics GCS</string>#g' work/res/values*/strings.xml || true
          fi
          sed -i 's/android:label="[^"]*"/android:label="Aeronics GCS"/' work/AndroidManifest.xml || true

      - name: Replace launcher icons
        run: |
          for d in mipmap-mdpi mipmap-hdpi mipmap-xhdpi mipmap-xxhdpi mipmap-xxxhdpi; do
            [ -d work/res/$d ] && cp -f branding/icon.png work/res/$d/ic_launcher.png || true
            [ -d work/res/$d ] && cp -f branding/icon.png work/res/$d/ic_launcher_round.png || true
          done
          for d in drawable-anydpi-v26 drawable-v26 mipmap-anydpi-v26; do
            if [ -d work/res/$d ]; then
              cp -f branding/icon.png work/res/$d/ic_launcher_foreground.png || true
              cp -f branding/icon.png work/res/$d/ic_launcher_background.png || true
            fi
          done

      # --------- ULTRA-BRUTE LOGO OVERWRITE + text replace --------------------
      - name: Overwrite common QGC logos & splash
        run: |
          set -x
          # Specific common filenames we’ve seen in QGC 5.x builds
          for n in qgcLogo.png qgclogo.png QGCLogo.png qgcAppIcon.png productIcon.png toolbarLogo.png appIcon.png AppIcon.png logo.png Logo.png; do
            find work -type f -iname "$n" -print -exec cp -f branding/aeronics_logo.png {} \; || true
          done
          # Any file path that contains '/logo' or '/qgc' and ends with png/svg
          find work -type f -iregex '.*/\(logo\|qgc\)[^/]*\.\(png\|svg\)$' -print \
            -exec cp -f branding/aeronics_logo.png {} \; || true
          # Splash images
          find work -type f -iregex '.*/splash[^/]*\.png$' -print \
            -exec cp -f branding/icon.png {} \; || true
          # Try 9-patch splash replacements if present
          find work -type f -iregex '.*/splash[^/]*\.9\.png$' -print \
            -exec cp -f branding/icon.png {} \; || true

      - name: Replace visible text in QML/JS
        run: |
          # Replace label text everywhere it appears in QML/JS/JSON
          for ext in qml js json; do
            grep -RIl --include="*.${ext}" "QGroundControl" work 2>/dev/null \
              | xargs -r sed -i 's/QGroundControl/Aeronics GCS/g'
          done
          # Also many QGC screens literally print "QGroundControl Version"
          grep -RIl --include="*.qml" "Version" work 2>/dev/null \
            | xargs -r sed -i 's/QGroundControl Version/Aeronics GCS Version/g'

      - name: Rebuild unsigned APK
        run: java -jar apktool.jar b work -o unsigned.apk

      - name: Sign & align
        run: |
          mkdir -p output
          java -jar uber-apk-signer.jar -a unsigned.apk -o output

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Aeronics-GCS-APK
          path: output/*.apk
